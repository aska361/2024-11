#include <stdio.h>

// 填充螺旋方阵
void fillSpiral(int matrix[][30], int n) {
    int num = 1;
    int row_start = 0, row_end = n - 1;
    int col_start = 0, col_end = n - 1;

    while (row_start <= row_end && col_start <= col_end) {
        // 从左到右填充顶部行
        for (int i = col_start; i <= col_end; i++) {
            matrix[row_start][i] = num++;
        }
        row_start++;

        // 从上到下填充最右列
        for (int i = row_start; i <= row_end; i++) {
            matrix[i][col_end] = num++;
        }
        col_end--;

        // 从右到左填充底部行（如果需要）
        if (row_start <= row_end) {
            for (int i = col_end; i >= col_start; i--) {
                matrix[row_end][i] = num++;
            }
            row_end--;
        }

        // 从下到上填充最左列（如果需要）
        if (col_start <= col_end) {
            for (int i = row_end; i >= row_start; i--) {
                matrix[i][col_start] = num++;
            }
            col_start++;
        }
    }
}

int main() {
    int n;
    scanf("%d", &n);

    int matrix[30][30];

    fillSpiral(matrix, n);

    // 打印矩阵
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%03d", matrix[i][j]);
            if (j < n - 1)
            printf(" ");
        }
        printf("\n");
    }

    return 0;
}
